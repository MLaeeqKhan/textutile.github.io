{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","AboutText","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","About","myStyle","setMyStyle","_useState3","_useState4","setBtnText","aria-labelledby","data-bs-parent","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","components_Alert","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.46957886.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\"to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\"to=\"/about\">{props.AboutText}</Link>\r\n          </li>\r\n         \r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Mode</label>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    AboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    AboutText: 'About text here'\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\nconst handleUpClick=()=>{\r\n  // console.log(\"Upper Case Was Clicked\" + text);\r\n  let newText= text.toUpperCase();\r\n  setText(newText)\r\n  props.showAlert(\"Converted to UpperCase\",\"success\");\r\n\r\n}\r\nconst handleLoClick=()=>{\r\n  // console.log(\"Upper Case Was Clicked\" + text);\r\n  let newText= text.toLowerCase();\r\n  setText(newText)\r\n  props.showAlert(\"Converted to LowerCase\",\"success\");\r\n}\r\n\r\nconst handleOnChange=(event)=>{\r\n  // console.log(\"On Change\");\r\n  setText(event.target.value)\r\n}\r\n\r\n  const [text,setText]=useState(\"\");\r\n  \r\n  return (\r\n    <>\r\n          <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n\r\n              <h1>{props.heading}</h1>\r\n              <div className=\"mb-3\">\r\n\r\n              <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} rows=\"4\"></textarea>\r\n              </div>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}> Convert to Upercase</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}> Convert to Lowercase</button>\r\n          </div>\r\n\r\n          <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n               <h2>Your Text Summary</h2>\r\n                \r\n                <p>{ text.split(\" \").length} words and {text.length} characters</p>\r\n               \r\n              \r\n               <p>{0.008*text.split(\" \").length} Minutes read</p> \r\n               <h2>Preview</h2>\r\n               <p>{text}</p>\r\n\r\n          </div>\r\n     </>\r\n  )\r\n}\r\n","import React, { useState } from 'react' \r\n\r\nexport default function About() {\r\n    \r\n    const [myStyle,setMyStyle]=useState( {\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    } )\r\n   const [setText,setBtnText]=useState(\"Enable Dark Mode\")\r\n   const toggleStyle=()=>{\r\n     if(myStyle.color==='black'){\r\n      setMyStyle({  color:'white',\r\n        backgroundColor:'black'\r\n     })\r\n     setBtnText(\"Enable Light Mode\")\r\n    }\r\n    else{\r\n        setMyStyle({  color:'black',\r\n        backgroundColor:'white'\r\n     })\r\n     setBtnText(\"Enable Dark Mode\")\r\n    }\r\n   } \r\n   \r\n  return (\r\n    <div className='container' style={myStyle}>\r\n        <h2 className='my-3'>About us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n</div>\r\n<button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary my-3\" >{setText}</button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>\r\n  {\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\n\nimport React, {useState} from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode,setMode]= useState('light')\n  const [alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n\n    },1500);\n  }\n\n  const toggleMode =() =>{\n    if(mode==='light')\n    {\n    setMode('dark')\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"Dark Mode Has Been Enabled\",\"success\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode Has Been Enabled\",\"success\");\n    }\n  }\n  return (\n        <>\n         \n          {/* <Navbar title=\"TextUtiles\" AboutText=\"About Us\"/> */}\n          <Router>\n          <Navbar title=\"TextUtiles\" mode={mode} toggleMode={toggleMode}/>\n          <Alert alert={alert}/>\n          <div className=\"container\">\n          <Routes>\n            <Route  path=\"/about\" element={<About />}>\n            </Route>\n            <Route  path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes>\n        </div>\n         </Router>\n        </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}